{"version":3,"sources":["components/SubFolder.js","components/Folder.js","actions/index.js","components/Folders.js","components/ClickMenu.js","components/TreeViewPane.js","App.js","serviceWorker.js","reducers/visibleFolders.js","reducers/initialFolders.js","reducers/anchorEl.js","reducers/index.js","index.js"],"names":["connect","state","visibleFolders","padding","identifier","childrens","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","map","child","name","file_name","children","initialFolders","dispatch","ListItem","button","style","paddingLeft","onClick","type","folderName","onContextMenu","event","preventDefault","anchorEl","currentTarget","ListItemIcon","ListItemText","inset","primary","renderExpanders","folder","handleClose","Menu","id","open","Boolean","onClose","MenuItem","withStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","nested","spacing","unit","classes","className","subheader","ListSubheader","App","window","location","hostname","match","action","key","initialState","fileBrowser","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7533cdd4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, Collapse } from '@material-ui/core';\nimport Folder from './Folder';\n\nconst SubFolder = ({ visibleFolders, padding, identifier, childrens }) => {\n  if (!childrens) return null;\n  padding = padding + 20;\n  let final = [];\n  function findFalsy(data, key) {\n    if (!data) final.push(key);\n    else if (Array.isArray(data)) {\n      data.forEach(val => {\n        findFalsy(val);\n      });\n    } else if (typeof data === 'object')\n      Object.keys(data).forEach(key => {\n        findFalsy(data[key], key);\n      });\n  }\n  return (\n    <Collapse in={visibleFolders[identifier]} timeout=\"auto\" unmountOnExit>\n      <List component=\"div\" disablePadding>\n        {childrens.map(child => (\n          <Folder\n            key={child.identifier}\n            name={child.name || child.file_name}\n            padding={padding}\n            identifier={child.identifier}\n            children={child.children}\n          />\n        ))}\n      </List>\n    </Collapse>\n  );\n};\n\nSubFolder.propTypes = {\n  visibleFolders: PropTypes.object.isRequired\n};\n\nconst select = state => ({\n  visibleFolders: state.visibleFolders\n});\n\nexport default connect(select)(SubFolder);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\n\nimport SubFolder from './SubFolder';\nimport { setVisibleFolders, toggleMenu } from '../actions';\n\nconst Folder = ({\n  visibleFolders,\n  dispatch,\n  name,\n  padding,\n  identifier,\n  children\n}) => {\n  const renderExpanders = (children, identifier) => {\n    if (!children) return;\n    return visibleFolders[identifier] ? <ExpandLess /> : <ExpandMore />;\n  };\n  return (\n    <div>\n      <ListItem\n        key={identifier}\n        button\n        style={{ paddingLeft: padding }}\n        onClick={() => dispatch(setVisibleFolders(identifier))}\n        onContextMenu={event => {\n          event.preventDefault();\n          dispatch(toggleMenu(event.currentTarget));\n        }}\n      >\n        <ListItemIcon>{children ? <FolderIcon /> : <InboxIcon />}</ListItemIcon>\n        <ListItemText inset primary={name} />\n        {renderExpanders(children, identifier)}\n      </ListItem>\n      <SubFolder\n        identifier={identifier}\n        childrens={children}\n        padding={padding}\n      />\n    </div>\n  );\n};\n\nFolder.propTypes = {\n  visibleFolders: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst select = state => ({\n  visibleFolders: state.visibleFolders,\n  initialFolders: state.initialFolders\n});\n\nexport default connect(select)(Folder);\n","export const setVisibleFolders = folderName => {\n  return {\n    type: 'TOGGLE_FOLDER',\n    folderName\n  };\n};\nexport const toggleMenu = anchorEl => {\n  return {\n    type: 'TOGGLE_MENU',\n    anchorEl\n  };\n};\nexport const closeMenu = () => {\n  return {\n    type: 'TOGGLE_MENU',\n    anchorEl: null\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Folder from './Folder';\n\nconst Folders = ({ initialFolders }) =>\n  initialFolders.map(folder => (\n    <Folder\n      key={folder.identifier}\n      name={folder.name}\n      padding={20}\n      identifier={folder.identifier}\n      children={folder.children}\n    />\n  ));\nFolders.propTypes = {\n  initialFolders: PropTypes.array.isRequired\n};\n\nconst select = state => ({\n  initialFolders: state.initialFolders\n});\n\nexport default connect(select)(Folders);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { closeMenu } from '../actions';\n\nconst ClickMenu = ({ anchorEl, dispatch }) => {\n  const handleClose = () => {\n    dispatch(closeMenu());\n  };\n  return (\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n      <MenuItem onClick={handleClose}>Rename</MenuItem>\n      <MenuItem onClick={handleClose}>Delete</MenuItem>\n      {/* <MenuItem onClick={this.handleClose}>Logout</MenuItem> */}\n    </Menu>\n  );\n};\n\nClickMenu.propTypes = {\n  anchorEl: PropTypes.object,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst select = state => ({\n  anchorEl: state.anchorEl\n});\n\nexport default connect(select)(ClickMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Folders from './Folders';\nimport ClickMenu from './ClickMenu';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n});\n\nconst TreeViewPane = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <List\n        component=\"nav\"\n        subheader={<ListSubheader component=\"div\">Browse</ListSubheader>}\n      >\n        <Folders />\n        <ClickMenu />\n      </List>\n    </div>\n  );\n};\n\nTreeViewPane.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(TreeViewPane);\n","import React from 'react';\nimport TreeViewPane from './components/TreeViewPane';\n\nconst App = () => {\n  return <TreeViewPane />;\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const visibleFolders = (state = {}, action) => {\n  switch (action.type) {\n    case 'TOGGLE_FOLDER':\n      const key = action.folderName;\n      if (state[key])\n        return {\n          ...state,\n          [key]: !state[key]\n        };\n      else\n        return {\n          ...state,\n          [key]: true\n        };\n    default:\n      return state;\n  }\n};\n\nexport default visibleFolders;\n","const initialState = [\n  {\n    name: 'LittleBigPlanet PS Vita',\n    identifier: 'parent0',\n    type: 'directory',\n    children: [\n      {\n        name: 'Game play resources',\n        type: 'directory',\n        identifier: 'child0',\n        children: [\n          {\n            name: 'Installation',\n            identifier: 'sub-child install0',\n            type: 'directory',\n            children: [\n              {\n                file_name: 'install.iso',\n                type: 'iso image'\n              },\n              {\n                file_name: 'archive_unbox.dat',\n                type: 'dat file'\n              }\n            ]\n          },\n          {\n            name: 'Resource Dependency',\n            identifier: 'sub-child resource0',\n            type: 'directory',\n            children: [\n              {\n                file_name: 'profile.sav',\n                type: 'sav file'\n              },\n              {\n                file_name: 'snd0.AT3',\n                type: 'AT3 file'\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Marvel Super Hero Edition',\n    identifier: 'parent1',\n    type: 'directory',\n    children: [\n      {\n        name: 'Game play resources',\n        type: 'directory',\n        identifier: 'child1',\n        children: [\n          {\n            name: 'Installation',\n            identifier: 'sub-child install1',\n            type: 'directory',\n            children: [\n              {\n                file_name: 'install.iso',\n                type: 'iso image'\n              },\n              {\n                file_name: 'archive_unbox.dat',\n                type: 'dat file'\n              }\n            ]\n          },\n          {\n            name: 'Resource Dependency',\n            identifier: 'sub-child resource1',\n            type: 'directory',\n            children: [\n              {\n                file_name: 'profile.sav',\n                type: 'sav file'\n              },\n              {\n                file_name: 'snd0.AT3',\n                type: 'AT3 file'\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Splice: Tree of Life',\n    identifier: 'parent2',\n    type: 'directory',\n    children: [\n      {\n        name: 'Game play resources',\n        type: 'directory',\n        identifier: 'child2',\n        children: [\n          {\n            name: 'Installation',\n            identifier: 'sub-child install2',\n            type: 'directory',\n            children: [\n              {\n                file_name: 'install.iso',\n                type: 'iso image'\n              },\n              {\n                file_name: 'archive_unbox.dat',\n                type: 'dat file'\n              }\n            ]\n          },\n          {\n            name: 'Resource Dependency',\n            identifier: 'sub-child resource2',\n            type: 'directory',\n            children: [\n              {\n                file_name: 'profile.sav',\n                type: 'sav file'\n              },\n              {\n                file_name: 'snd0.AT3',\n                type: 'AT3 file'\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\n\nconst initialFolders = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default initialFolders;\n","const anchorEl = (state = null, action) => {\n  switch (action.type) {\n    case 'TOGGLE_MENU':\n      return action.anchorEl;\n    default:\n      return state;\n  }\n};\n\nexport default anchorEl;\n","import { combineReducers } from 'redux';\nimport visibleFolders from './visibleFolders';\nimport initialFolders from './initialFolders';\nimport anchorEl from './anchorEl';\n\nconst fileBrowser = combineReducers({\n  visibleFolders,\n  initialFolders,\n  anchorEl\n});\n\nexport default fileBrowser;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport fileBrowser from './reducers';\n\nconst store = createStore(fileBrowser);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}